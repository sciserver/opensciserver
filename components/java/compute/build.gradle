plugins {
    id('java')
    id('war')
    id('eclipse-wtp')
    id('idea')
    id('checkstyle')
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }
}

repositories {
    jcenter()
}

checkstyle {
    toolVersion '10.10.0'
    config project.resources.text.fromUri("https://raw.githubusercontent.com/sciserver/sciserver-guidelines/main/coding-style/java/checkstyle-10.xml")
    maxWarnings 65535
}

dependencies {
    implementation('org.liquibase:liquibase-core:3.6.3') {
        exclude group:'ch.qos.logback', module:'logback-classic'
    }

    compileOnly 'org.apache.tomcat:tomcat-servlet-api:8.0.39'
    compileOnly 'org.apache.tomcat:tomcat-jsp-api:8.0.39'
    compileOnly 'org.apache.tomcat:tomcat-annotations-api:8.0.39'

    implementation 'javax.servlet:jstl:1.2'
    implementation 'commons-io:commons-io:2.5'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.17.0'
    implementation 'org.apache.logging.log4j:log4j-web:2.17.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.0'
    implementation 'org.apache.httpcomponents:httpclient:4.5.7'
    implementation 'org.springframework:spring-core:4.3.4.RELEASE'
    implementation 'org.springframework:spring-webmvc:4.3.4.RELEASE'
    implementation 'org.springframework:spring-web:4.3.4.RELEASE'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.8.5'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.8.5'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.61'
    implementation 'org.bouncycastle:bctls-jdk15on:1.61'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.61'
    implementation 'com.google.guava:guava:19.0'
    implementation 'mysql:mysql-connector-java:6.0.5'
    implementation 'com.zaxxer:HikariCP:2.5.1'
    implementation 'com.rabbitmq:amqp-client:2.3.1'
    implementation 'io.kubernetes:client-java:14.0.0'
    implementation 'io.kubernetes:client-java-api-fluent:14.0.0'
    //implementation files("${rootDir}/racm/build/dist/racm_models.jar")
    implementation project(':logging')
    implementation project(':clients:auth')
    implementation project(':clients:racm')
}

task git(type: Exec) {
    commandLine 'git', 'describe'

    doFirst{
        standardOutput = new FileOutputStream("${projectDir}/WebContent/WEB-INF/version")
    }

    doLast{
        standardOutput.close()
    }
}

war {
    dependsOn git
    destinationDir = file("${buildDir}/dist")

    from('WebContent') {
        include 'static/**'
    }

    webInf {
        from('WebContent/WEB-INF') {
            include '*'
            include 'jsp/**'
            include 'jspf/**'
        }

        from('conf') {
            include 'application.properties'
        }

        from('src') {
            into 'classes'
            exclude '**/*.java'
        }
    }
}

eclipse {
    wtp {
        component {
            resource deployPath: '/static', sourcePath: 'WebContent/static'
            resource deployPath: '/WEB-INF', sourcePath: 'WebContent/WEB-INF'
            resource deployPath: '/WEB-INF', sourcePath: 'conf'
        }
    }
}

task cleanExtra(type: Delete) {
    delete 'dist', 'WebContent/WEB-INF/version'
}

clean.dependsOn('cleanExtra');
