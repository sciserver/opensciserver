name: CI

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - '*'

env:
  REGISTRY: ghcr.io
  IMAGE_BASE: ${{ github.repository }}

jobs:
  build:
    name: Build all SciServer components
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: get tags
        run: git fetch --tags origin
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: install python dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install tox build
      - run: make
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v5
        id: dockermeta
      - name: Build and push docker images
        run: make publish-images REPO=${{ env.REGISTRY }}/${{ env.IMAGE_BASE }} VTAG=${{ fromJSON(steps.dockermeta.outputs.json).labels['org.opencontainers.image.version'] }}
      - name: Generate helm tarball
        run: make helm REPO=${{ env.REGISTRY }}/${{ env.IMAGE_BASE }} VTAG=${{ fromJSON(steps.dockermeta.outputs.json).labels['org.opencontainers.image.version'] }}
      - name: configure git for helm release
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: swap built helm charts
        run: |
          rm -rf helm/sciserver
          mv helm/build/sciserver helm/sciserver
      - name: helm chart release
        uses: helm/chart-releaser-action@v1.7.0
        with:
          charts_dir: helm/
          mark_as_latest: false
        env:
          CR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v4
        with:
          name: helm-charts
          path: helm/build/*.tar.gz
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports
          path: components/java/**/build/reports/tests/test/
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: checkstyle-reports
          path: components/java/**/build/reports/checkstyle/

  docs:
    name: Build docs with Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.11 ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -r docs/requirements.txt
        shell: bash
      - name: Build sphinx docs.
        shell: bash
        working-directory: docs
        run: make html
